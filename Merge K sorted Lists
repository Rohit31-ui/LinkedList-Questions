Merge K sorted Lists
You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it.

 

Example 1:

Input: lists = [[1,4,5],[1,3,4],[2,6]]
Output: [1,1,2,3,4,4,5,6]
Explanation: The linked-lists are:
[
  1->4->5,
  1->3->4,
  2->6
]
merging them into one sorted linked list:
1->1->2->3->4->4->5->6
Example 2:

Input: lists = []
Output: []
Example 3:

Input: lists = [[]]
Output: []
 

Constraints:

k == lists.length
0 <= k <= 104
0 <= lists[i].length <= 500
-104 <= lists[i][j] <= 104
lists[i] is sorted in ascending order.
The sum of lists[i].length will not exceed 104.


class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        //create dummy Node
        ListNode dummy=new ListNode(-1);
        //priorty Queue creation
        PriorityQueue<Integer> pq=new PriorityQueue<>();

        //iterate through given array
        for(int i=0;i<lists.length;i++){
            //get current list
            ListNode current = lists[i];
            //add all vales of list to pq
            while (current != null) {
                pq.add(current.val);
                current = current.next;
            }
        }
        
        //create a new temp traversal node
        ListNode temp=dummy;
        //create new list by poping values of from pq
        while(!pq.isEmpty()){
            temp.next=new ListNode(pq.poll());
            temp=temp.next;
        }

        return dummy.next;


    }
}
