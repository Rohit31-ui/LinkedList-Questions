//palindrome linkedList

//First find middle of linkedlist and then reverse from middle and then compare

class Solution {
    public boolean isPalindrome(ListNode head) {
       
       ListNode fast = head;
       ListNode slow = head;
        //step1:- find middle element
       while(fast!=null && fast.next!=null){
          fast=fast.next.next;
          slow=slow.next;
       }
     

     ListNode prev=null;
     ListNode curr=slow;
     ListNode After= null;
     
    //step2:-   reverse half list
     while(curr!=null){
        After = curr.next;
        curr.next=prev;
        prev=curr;
        curr=After;
     }

     ListNode firstHalf = head;
     ListNode secondHalf = prev;

    // step3:- compare first and last half
     while(secondHalf!=null){
        if(firstHalf.val!= secondHalf.val){
            return false;
        }
        firstHalf=firstHalf.next;
        secondHalf=secondHalf.next;

     }
     return true;
    }
}
